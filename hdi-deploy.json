{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "0.9.0.0",
  "parameters": {

    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "KeyvaultName"
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the HDInsight cluster to create."
      }
    },
    "clusterLoginUserName": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
      }
    },
    "clusterLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "clusterVersion": {
      "type": "string",
      "defaultValue": "3.6",
      "metadata": {
        "description": "HDInsight cluster version."
      }
    },
    "clusterWorkerNodeCount": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
        "description": "The number of nodes in the HDInsight cluster."
      }
    },
    "clusterKind": {
      "type": "string",
      "defaultValue": "KAFKA",
      "metadata": {
        "description": "The type of the HDInsight cluster to create."
      }
    },
    "sshUserName": {
      "type": "string",
      "defaultValue": "sshuser",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },
    "sshPublicKey": {
      "type": "securestring"
    },
    "vnetResourceGroup": {
      "type": "string"
    },
    "vnetName": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    }
  },
  "variables": {
    "storageAccountName": "[concat('hdi',uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "subnetID": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-03-01-preview",
      "name": "[parameters('clusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]"
      ],
      "properties": {
        "clusterVersion": "[parameters('clusterVersion')]",
        "osType": "Linux",
        "tier": "standard",
        "clusterDefinition": {
          "kind": "[parameters('clusterKind')]",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(variables('storageAccountName'),'.blob.core.windows.net')]",
              "isDefault": true,
              "container": "k8s-with-hdi-kafka",
              "key": "[listKeys(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName')), '2015-05-01-preview').key1]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "minInstanceCount": 1,
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "Standard_D3_V2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "sshProfile": {
                    "publicKeys": [
                      {
                        "certificateData": "[parameters('sshPublicKey')]"
                      }
                    ]
                  }
                }
              },
              "virtualNetworkProfile": {
                "id": "[variables('vnetID')]",
                "subnet": "[variables('subnetID')]"
              },
              "scriptActions": []
            },
            {
              "name": "workernode",
              "minInstanceCount": 1,
              "targetInstanceCount": 4,
              "hardwareProfile": {
                "vmSize": "Standard_D3_V2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "sshProfile": {
                    "publicKeys": [
                      {
                        "certificateData": "[parameters('sshPublicKey')]"
                      }
                    ]
                  }
                }
              },
              "virtualNetworkProfile": {
                "id": "[variables('vnetID')]",
                "subnet": "[variables('subnetID')]"
              },
              "scriptActions": [],
              "dataDisksGroups": [
                {
                  "disksPerNode": 2
                }
              ]
            },
            {
              "name": "zookeepernode",
              "minInstanceCount": 1,
              "targetInstanceCount": 3,
              "hardwareProfile": {
                "vmSize": "Large"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "sshProfile": {
                    "publicKeys": [
                      {
                        "certificateData": "[parameters('sshPublicKey')]"
                      }
                    ]
                  }
                }
              },
              "virtualNetworkProfile": {
                "id": "[variables('vnetID')]",
                "subnet": "[variables('subnetID')]"
              },
              "scriptActions": []
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    }
  ]
}